[
["index.html", "R for Research Chapter 1 Preface", " R for Research Abhay Singh 2020-06-08 Chapter 1 Preface This is a compilcation of handouts for \\(R^2: R for Research\\) written in Markdown. "],
["2-what-is-r.html", "Chapter 2 What is R?", " Chapter 2 What is R? According to the official webpage: R is a language and environment for statistical computing and graphics. It is a GNU project which is similar to the S language and environment which was developed at Bell Laboratories (formerly AT&amp;T, now Lucent Technologies) by John Chambers and colleagues. R can be considered as a different implementation of S. There are some important differences, but much code written for S runs unaltered under R. http://www.r-project.org/about.html According to Wikipedia R is a free software programming language and a software environment for statistical computing and graphics. The R language is widely used among statisticians and data miners for developing statistical software and data analysis. Polls and surveys of data miners are showing R’s popularity has increased substantially in recent years. To Summarise R is the most amazing free statistical software ever! This recent video by Revolution Analytics does a great job in summarizing R ! "],
["2-1-why-should-we-learn-r.html", "2.1 Why should we learn R?", " 2.1 Why should we learn R? R follows a type inference1 coding structure and provides a wide variety of statistical and graphical techniques, including; Linear and non-linear modelling Univariate &amp; Multivariate Statistics Classical statistical tests Time-series analysis/ Econometrics Simulation and Modelling Datamining-classification, clustering etc. For computationally intensive tasks, C, C++, and Fortran code can be linked and called at run time. R is easily extensible through functions and extensions, and the R community is noted for its active contributions in terms of packages. #Number of R Packages length(available.packages(repos = &quot;http://cran.us.r-project.org&quot;)[,1]) ## [1] 15760 Total 15760 packages and counting Type inference refers to the automatic deduction of the type of an expression in a programming language.↩︎ "],
["2-2-Rinstall.html", "2.2 Installing R and RStudio on Windows", " 2.2 Installing R and RStudio on Windows The latest version of R can be download from the R homepage. R download page: http://www.cran.r-project.org/bin/windows/base/ The page also provides some instructions and FAQ’s on R installation. RStudio IDE ( IDE: Integrated Development Environment) is a powerful and productive user interface for R. It’s free and open source, and works great on Windows, Mac, and Linux "],
["2-3-rstudio-guiide.html", "2.3 RStudio GUI/IDE", " 2.3 RStudio GUI/IDE RStudio GUI is composed of 4 panes which can be rearranged according to the requirements. There are a lot of short introductions to RStudio available online so we will not go into more details. The figure below gives the snapshot of RStudio GUI. Figure 2.1: RStudio IDE A short intro to RStudio ! RStudio Overview - 1:30 from RStudio, Inc. on Vimeo. "],
["2-4-installing-packages.html", "2.4 Installing Packages", " 2.4 Installing Packages The easiest way to install packages is to do it via R console. The command install.packages(“package name”) installs R packages directly from internet. Other options to install various dependencies to a package can be easily specified when calling this function. A call to this function asks the user to chose a CRAN mirror at the first instance. Run the following to install Quantreg package on R. Also use the help function to get the details. #Install a package using RStudio Console install.packages(&quot;quantreg&quot;,dependencies=c(&quot;Depends&quot;,&quot;Suggests&quot;)) install.packages(c(&quot;zoo&quot;,&quot;reshape2&quot;,&quot;quantreg&quot;,&quot;e1071&quot;,&quot;foreign&quot;,&quot;psych&quot;,&quot;pastecs&quot;,&quot;ggplot2&quot;,&quot;stargazer&quot;,&quot;formatR&quot;,&quot;plm&quot;,&quot;xts&quot;,&quot;tseries&quot;,&quot;fArma&quot;), dependencies = TRUE) #to be updated "],
["2-5-getting-help.html", "2.5 Getting Help", " 2.5 Getting Help As R is constantly evolving and new functions/packages are introduced every day it is good to know sources of help. The most basic help one can get is via the help() function. This function shows the help file for a function which has been created by package managers. help(&quot;function name&quot;) The following can be used to search for a function etc. #Replace the &#39;search string&#39; with the expression you want to search ??search string All the R packages (with few exceptions) have a user’s manual listing the functions in a package. This can be downloaded in PDF format from the R package download page2. R also provides some search tools given at http://cran.r-project.org/search.html The R Site search is helpful in searching for topics related to problem in hand. Other than these various good R related blogs are on the internet which can be really helpful. A combined upto date view of 452 contributed blogs can be found at R-bloggers3. Over all there quite a big community of R Users and help can be found for most of the topics. For example reference manual for quantreg package is at http://cran.r-project.org/web/packages/quantreg/quantreg.pdf↩︎ Go to [www.r-bloggers.com]: www.r-bloggers.com↩︎ "],
["2-6-task-views-in-r-introduction-installation.html", "2.6 Task Views in R-Introduction &amp; Installation", " 2.6 Task Views in R-Introduction &amp; Installation Task Views in R provide packages grouped together according to a generalized task they are used for. Table below gives the name of task views available4. The following commands install the package ctv and then Finance task view. #install package task views install.packages(&quot;ctv&quot;) library(&quot;ctv&quot;)#R function library() is used to call a package #install Finance task view install.views(&quot;Finance&quot;) Figure 2.2: Task Views This list of available task views can be found at http://cran.r-project.org/web/views/↩︎ "],
["2-7-r-core-packages.html", "2.7 R core packages", " 2.7 R core packages R comes with few bundled core packages which provide various data analytics/statistical capabilities to R. The base package in R has basic functions and operators which are required for analytical programming, stats is another example of core R packages. #List of R core packages row.names(installed.packages(priority=&quot;base&quot;)) ## [1] &quot;base&quot; &quot;compiler&quot; &quot;datasets&quot; &quot;graphics&quot; &quot;grDevices&quot; &quot;grid&quot; ## [7] &quot;methods&quot; &quot;parallel&quot; &quot;splines&quot; &quot;stats&quot; &quot;stats4&quot; &quot;tcltk&quot; ## [13] &quot;tools&quot; &quot;utils&quot; "],
["2-8-example-1-hello-r.html", "2.8 Example-1 Hello R!", " 2.8 Example-1 Hello R! message(&quot;Hello R!&quot;) #use to display messages ## Hello R! print(&quot;Hello R!&quot;) #use to display variables/messages ## [1] &quot;Hello R!&quot; msg=&quot;Hello R!&quot; #type inference no need to define strings! print(msg) ## [1] &quot;Hello R!&quot; R packages not just come with demo programs but the help files for the functions in R packages mostly have example codes for the particular function. R function example() is helpful in running the example code for a function. For running example code for in quantreg package type example(rq, package=”quantreg”) "],
["3-r-data-types-and-data-structures.html", "Chapter 3 R Data Types and Data Structures", " Chapter 3 R Data Types and Data Structures When human judgement and big data intersect there are some funny things that happen. -Nate Silver "],
["3-1-data-types.html", "3.1 Data Types", " 3.1 Data Types As per R’s official language definitions; in every computer language variables provide a means of accessing the data stored in memory. R does not provide direct access to the computer’s memory but rather provides a number of specialized data structures we will refer to as objects. These objects are referred to through symbols or variables. "],
["4-r-data-types-and-data-structures-1.html", "Chapter 4 R Data Types and Data Structures", " Chapter 4 R Data Types and Data Structures When human judgement and big data intersect there are some funny things that happen. -Nate Silver "],
["5-graphs-examples.html", "Chapter 5 Graphs examples", " Chapter 5 Graphs examples Some example visualisation "],
["5-1-visualising-covid-19-using-maps.html", "5.1 Visualising COVID-19 using maps", " 5.1 Visualising COVID-19 using maps library(ggplot2) library(maps) library(ggthemes) library(plotly) d1=read.csv(&quot;https://raw.githubusercontent.com/RamiKrispin/coronavirus-csv/master/coronavirus_dataset.csv&quot;) d1=d1[d1$type==&quot;confirmed&quot;,] d2=aggregate(d1$cases,by=list(Lat=d1$Lat,Long=d1$Long,Country.Region=d1$Country.Region,Date=d1$date),FUN=sum) colnames(d2)[5]=&quot;cases&quot; world=map_data(&quot;world&quot;) w1=ggplot()+geom_polygon(data=world,aes(colour=region,x=long,y=lat,group=group),fill=&quot;white&quot;)+theme_map()+theme(legend.position = &quot;none&quot;)+scale_fill_brewer(palette = &quot;Blues&quot;) map &lt;- w1 + geom_point(aes(x = Long, y = Lat, size = cases,colour=Country.Region), data =d2, alpha = 1) + scale_size_continuous(range = c(2, 8)) + labs(title= &#39;COVID-19 Confirmed Cases&#39;) map #interactive version ggplotly(map) "],
["5-2-example-two.html", "5.2 Example two", " 5.2 Example two "],
["6-final-words.html", "Chapter 6 Final Words", " Chapter 6 Final Words We have finished a nice book. "],
["references.html", "References", " References "]
]
